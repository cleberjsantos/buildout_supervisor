#! /bin/sh
### BEGIN INIT INFO
# Provides:          supervisord
# Required-Start:    $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: initscript for supervisord at ${buildout:bin-directory}
# Description:       This file should be used to construct scripts to be
#                    placed in /etc/init.d.
### END INIT INFO

#
# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Start/Stop supervisord at ${buildout:bin-directory}"
NAME=supervisord
DAEMON=${buildout:bin-directory}/$NAME
DAEMON_ARGS=""
PIDFILE=${buildout:directory}/var/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# file owner will be used to run daemon
OWNER=$(stat -c %U $DAEMON)

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

#   0 if daemon has been started
#   1 if daemon was already running
#   2 if daemon could not be started
    start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --chuid $OWNER --test > /dev/null \
  || return 1
    start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --chuid $OWNER -- \
  $DAEMON_ARGS \
  || return 2
# Add code here, if necessary, that waits for the process to be ready
#   1 if daemon was already stopped
#   2 if daemon could not be stopped
#   other if a failure occurred
    start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --chuid $OWNER --name $NAME
RETVAL="$?"
[ "$RETVAL" = 2 ] && return 2
# Wait for children to finish too if this is a daemon that forks
# that waits for the process to drop all resources that could be
# needed by services started subsequently.  A last resort is to
# sleep for some time.
    start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5  --chuid $OWNER --exec $DAEMON
[ "$?" = 2 ] && return 2
# Many daemons don't delete their pidfiles when they exit.
rm -f $PIDFILE
# restarting (for example, when it is sent a SIGHUP),
# then implement that here.
#
    start-stop-daemon --stop --signal 1 --quiet --pidfile $PIDFILE  --chuid $OWNER --name $NAME
return 0
}

